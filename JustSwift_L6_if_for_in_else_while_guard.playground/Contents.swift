//: Playground - noun: a place where people can play

import UIKit

//Ветвление потока
//Условия
/* Ниже приведен пример конструкции. Это псевдокод и срабатывать он не будет

if (условие) {
    //выполнять блок если условие верно
} else {
    //выполнять если условие не выполнилось
}
*/
/*
var a = -192
if (a < 0) {
    "a < 0"
} else if (a == 0){
    "a = 0"
} else {
    "a > 0"
}
*/
/*Ниже приведен пример конструкции. Это псевдокод и срабатывать он не будет

switch переменная {
    case значение 1:
        действие если значение1 = переменной
    сase значение 2:
        действие если значение2 = переменной
    ...........
default:
    действие, если ни одно из значений не равно переменной
}
*/
/*
var today = 3
switch today{
case 1:
    "Сегодня Пн"
case 2:
    "Сегодня Вт"
case 3:
    "Сегодня Ср"
case 4:
    "Чт"
case 5:
    "Пт"
case 6:
    "Сб"
case 7:
    "Вс"
default:
    "Неправильный номер"
}
*/
/*
var today = 2
switch today {
case 1...5 where today == 3:
    "Сегодня будний"
case 2...4:
    "Середина недели"
case 6...7:
    "Выходной"
default:
    "Неправильный номер"
    
}
*/
//Циклы
/*Ниже приведен пример конструкции. Это псевдокод и срабатывать он не будет

for инициализация; условие; инкремент {
    
}
*/
/*
for var i = 1; i <= 10; i++ {
    print(i)
}
*/
/* Ниже приведен пример конструкции. Это псевдокод и срабатывать он не будет

for переменная цикла in набор значений {
    
}
*/
/*
var fruits = ["Яблоко", "Груша", "Банан", "Арбуз", "Манго"]

for fruit in fruits {
    print(fruit)
}
*/
/*
var i = 1
while (i <= 10) {
    print("Swift")
    i++
}
*/
/*
var i = 1
repeat {
    print("Swift")
    i++
} while (i <= 10)
*/

//Управление потоком цикла
/*
mainLoop: for (var i = 1; i <= 10; i++) {
    if i == 5 {
        break mainLoop
    }
    print(i)
}
*/
//Оператор guard
/*
for (var i = 1; i <= 10; i++) {
    guard i == 5 else {
        continue
    }
    print(i)
}
*/
/*
Ниже приведен пример конструкции. Это псевдокод и срабатывать он не будет
guard let unwrappedItem = optionalItem else {
    break
}
*/
